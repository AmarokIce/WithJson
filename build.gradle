buildscript {
    ext.kotlinVersion = '1.9.21'
    ext.ppcVersion = '1.8.1'
    ext.neiVersion = '2.5.17'
    ext.ccVersion = '1.2.1'

    repositories {
        mavenCentral()
        maven {
            url = "https://jcenter.bintray.com/"
        }
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
            changing = true
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'idea'
apply plugin: 'forge'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'maven-publish'

version = "v0.2-b7"
group = "club.someoneice.ovo"
archivesBaseName = "WithJson-1.7.10"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "minecraft"
}

repositories {
    mavenCentral()
    maven {
        name = "AmarokMaven"
        url "http://maven.snowlyicewolf.club/"
        allowInsecureProtocol = true
    }

    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }

    maven {
        name "Curse Maven"
        url "https://cursemaven.com"
    }

    maven {
        name "Modrinth Maven"
        url "https://api.modrinth.com/maven"
    }

    flatDir{
        dirs 'lib'
    }
}

dependencies {
    /* Kotlin */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "curse.maven:AJSCore-445557:5155186"

    // implementation 'com.google.code.gson:gson:2.11.0'

    /* Pineapple Libraries */
    implementation "club.someoneice.pineapplepsychic:pineapple-psychic:$ppcVersion"
    // implementation "club.someoneice.togocup.recipebook:PineappleRecipeBook:1.0"

    /* ManaMetalMod */
    implementation "curse.maven:Muya-530214:4364097"
    implementation "curse.maven:ManaMetalMod-531708:4957568"

    implementation "maven.modrinth:notenoughitems-unofficial:${project.neiVersion}-GTNH"
    implementation "maven.modrinth:codechickencore-unofficial:${project.ccVersion}"
    implementation "maven.modrinth:codechickenlib-unofficial:${project.ccVersion}"
}

tasks.withType(Jar) {
    compileJava.options.encoding = 'UTF-8'
    compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

sourceCompatibility = targetCompatibility = "1.8"
compileKotlin.kotlinOptions.jvmTarget = "1.8"

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    filesMatching('mcmod.info') {
        expand 'modversion':project.version, 'mcversion':project.minecraft.version
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }

}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}